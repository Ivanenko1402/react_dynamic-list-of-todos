{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","App.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","todos","targetRowId","settargetRowId","setTargetUserId","className","map","todo","id","completed","title","type","onClick","item","userId","TodoFilter","inputValue","setSelectedOption","setInputValue","onChange","e","target","value","placeholder","style","pointerEvents","length","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Options","Loader","TodoModal","targetUserId","targetTodo","useState","user","setUser","useEffect","person","href","email","name","App","todosFromServer","setTodosFromServer","selectedOption","items","listOfTodos","list","filter","toLowerCase","includes","active","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5a0d68b.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  targetRowId: number;\n  settargetRowId: (num: number) => void\n  setTargetUserId: (num : number) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  targetRowId,\n  settargetRowId,\n  setTargetUserId,\n}) => {\n  const hendleClick = (item: Todo) => {\n    settargetRowId(item.id);\n    setTargetUserId(item.userId);\n  };\n\n  const booleanValue = (item: Todo) => {\n    return item.id === targetRowId;\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed ? 'has-text-success' : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => hendleClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={\n                      booleanValue(todo)\n                        ? 'far fa-eye-slash' : 'far fa-eye'\n                    }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  setSelectedOption: (str: string) => void;\n  setInputValue: (str: string) => void;\n  inputValue: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  inputValue,\n  setSelectedOption,\n  setInputValue,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setSelectedOption(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={(e) => {\n            setInputValue(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {inputValue.length && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={(() => {\n                setInputValue('');\n              })}\n            >\n              {}\n            </button>\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nenum Options {\n  active = 'active',\n  completed = 'completed',\n  all = 'all',\n}\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [targetRowId, settargetRowId] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('all');\n  const [inputValue, setInputValue] = useState('');\n  const [targetUserId, setTargetUserId] = useState(0);\n\n  useEffect(() => {\n    getTodos().then(items => setTodosFromServer(items));\n  }, []);\n\n  const listOfTodos = () => {\n    let list = [...todosFromServer].filter(todo => (\n      (todo.title).toLowerCase().includes(inputValue.toLowerCase())\n    ));\n\n    switch (selectedOption) {\n      case Options.active:\n        list = list.filter(todo => !todo.completed);\n        break;\n\n      case Options.completed:\n        list = list.filter(todo => todo.completed);\n        break;\n\n      default:\n        return list;\n    }\n\n    return list;\n  };\n\n  const targetTodo = listOfTodos().find(todo => todo.id === targetRowId);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setSelectedOption={setSelectedOption}\n                setInputValue={setInputValue}\n                inputValue={inputValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todosFromServer.length\n                ? (\n                  <TodoList\n                    todos={listOfTodos()}\n                    targetRowId={targetRowId}\n                    settargetRowId={settargetRowId}\n                    setTargetUserId={setTargetUserId}\n                  />\n                ) : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {targetRowId !== 0 && (\n        <TodoModal\n          targetUserId={targetUserId}\n          setTargetUserId={setTargetUserId}\n          settargetRowId={settargetRowId}\n          targetTodo={targetTodo}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  targetUserId: number;\n  setTargetUserId: (num: number) => void;\n  settargetRowId: (num: number) => void;\n  targetTodo: Todo | undefined;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  targetUserId,\n  setTargetUserId,\n  settargetRowId,\n  targetTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(targetUserId).then(person => setUser(person));\n  }, []);\n\n  const hendleClick = () => {\n    setTargetUserId(0);\n    setUser(null);\n    settargetRowId(0);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user && targetTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${targetTodo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={hendleClick}\n            >\n              {}\n            </button>\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {targetTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                targetTodo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}