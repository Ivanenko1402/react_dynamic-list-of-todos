{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","targetRowId","settargetRowId","setTargetUserId","useState","selectedRow","setSelectedRow","booleanValue","item","id","className","map","todo","classNames","completed","title","type","onClick","userId","TodoFilter","setSelectedOption","setInputValue","inputValue","onChange","e","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","targetUserId","targetTodo","user","setUser","useEffect","person","href","email","name","App","todosFromServer","setTodosFromServer","selectedOption","items","listOfTodos","subStr","filter","includes","toLowerCase","filterBy","find","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33020c21.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  targetRowId: number;\n  settargetRowId: (num: number) => void\n  setTargetUserId: (num : number) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  targetRowId,\n  settargetRowId,\n  setTargetUserId,\n}) => {\n  const [selectedRow, setSelectedRow] = useState(false);\n\n  const hendleClick = (item: Todo) => {\n    settargetRowId(item.id);\n    setSelectedRow(!selectedRow);\n    setTargetUserId(item.userId);\n  };\n\n  const booleanValue = (item: Todo) => {\n    return item.id === targetRowId && selectedRow;\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': booleanValue(todo),\n            })}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed ? 'has-text-success' : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => hendleClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={\n                      booleanValue(todo)\n                        ? 'far fa-eye-slash' : 'far fa-eye'\n                    }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  setSelectedOption: (str: string) => void;\n  setInputValue: (str: string) => void;\n  inputValue: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setSelectedOption,\n  setInputValue,\n  inputValue,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setSelectedOption(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={(e) => {\n            setInputValue(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={(() => {\n              setInputValue('');\n            })}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  targetUserId: number;\n  setTargetUserId: (num: number) => void;\n  settargetRowId: (num: number) => void;\n  targetTodo: Todo | undefined;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  targetUserId,\n  setTargetUserId,\n  settargetRowId,\n  targetTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(targetUserId).then(person => setUser(person));\n  }, []);\n\n  const hendleClick = () => {\n    setTargetUserId(0);\n    setUser(null);\n    settargetRowId(0);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${targetTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={hendleClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {targetTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">Planned</strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [targetRowId, settargetRowId] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('all');\n  const [inputValue, setInputValue] = useState('');\n  const [targetUserId, setTargetUserId] = useState(0);\n\n  useEffect(() => {\n    getTodos().then(items => setTodosFromServer(items));\n  }, []);\n\n  let listOfTodos = [...todosFromServer];\n\n  function filterBy(value: string, subStr: string) {\n    switch (value) {\n      case 'active':\n        listOfTodos = [...todosFromServer]\n          .filter(todo => !todo.completed)\n          .filter(item => item.title.includes(subStr.toLowerCase()));\n        break;\n\n      case 'completed':\n        listOfTodos = [...todosFromServer]\n          .filter(todo => todo.completed)\n          .filter(item => item.title.includes(subStr.toLowerCase()));\n        break;\n\n      default:\n        listOfTodos = [...todosFromServer].filter(\n          item => item.title.includes(subStr.toLowerCase()),\n        );\n        break;\n    }\n  }\n\n  filterBy(selectedOption, inputValue);\n\n  const targetTodo = listOfTodos.find(todo => todo.id === targetRowId);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setSelectedOption={setSelectedOption}\n                setInputValue={setInputValue}\n                inputValue={inputValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!listOfTodos.length && <Loader />}\n              {listOfTodos.length && (\n                <TodoList\n                  todos={listOfTodos}\n                  targetRowId={targetRowId}\n                  settargetRowId={settargetRowId}\n                  setTargetUserId={setTargetUserId}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {targetRowId !== 0 && (\n        <TodoModal\n          targetUserId={targetUserId}\n          setTargetUserId={setTargetUserId}\n          settargetRowId={settargetRowId}\n          targetTodo={targetTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}